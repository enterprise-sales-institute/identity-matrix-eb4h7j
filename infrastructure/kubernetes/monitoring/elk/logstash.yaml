---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: monitoring
  labels:
    app: logstash
    component: logging
    part-of: elk-stack
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9600"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: logstash
              topologyKey: kubernetes.io/hostname
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.9.0
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 4Gi
        env:
        - name: LS_JAVA_OPTS
          value: "-Xms1g -Xmx1g"
        - name: PIPELINE_WORKERS
          value: "2"
        - name: QUEUE_MAX_BYTES
          value: "1gb"
        - name: XPACK_MONITORING_ENABLED
          value: "true"
        ports:
        - name: beats
          containerPort: 5044
          protocol: TCP
        - name: http
          containerPort: 9600
          protocol: TCP
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: logstash-config
          mountPath: /usr/share/logstash/config/pipelines.yml
          subPath: pipelines.yml
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline
        - name: logstash-data
          mountPath: /usr/share/logstash/data
        readinessProbe:
          httpGet:
            path: /_node/stats
            port: 9600
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /_node/stats
            port: 9600
          initialDelaySeconds: 60
          periodSeconds: 20
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline-config
      - name: logstash-data
        emptyDir:
          sizeLimit: 2Gi
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: monitoring
  labels:
    app: logstash
    component: logging
spec:
  ports:
  - name: beats
    port: 5044
    protocol: TCP
    targetPort: 5044
  - name: http
    port: 9600
    protocol: TCP
    targetPort: 9600
  selector:
    app: logstash
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: monitoring
data:
  logstash.yml: |
    node.name: ${HOSTNAME}
    http.host: "0.0.0.0"
    xpack.monitoring.enabled: true
    xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch:9200"]
    pipeline.workers: ${PIPELINE_WORKERS}
    queue.type: persisted
    queue.max_bytes: ${QUEUE_MAX_BYTES}
    path.data: /usr/share/logstash/data
    log.level: info
  pipelines.yml: |
    - pipeline.id: "main"
      path.config: "/usr/share/logstash/pipeline"
      pipeline.workers: ${PIPELINE_WORKERS}
      pipeline.batch.size: 125
      pipeline.batch.delay: 50