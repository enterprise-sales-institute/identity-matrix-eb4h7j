apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
    component: tracing
    version: "1.45"
    part-of: monitoring-stack
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "16686"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: tracing
        version: "1.45"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: jaeger
        # jaegertracing/all-in-one:1.45 - Production-ready Jaeger all-in-one distribution
        image: jaegertracing/all-in-one:1.45
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 16686
          protocol: TCP
        - name: grpc
          containerPort: 14250
          protocol: TCP
        - name: zipkin
          containerPort: 9411
          protocol: TCP
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: MEMORY_MAX_TRACES
          value: "100000"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - jaeger
              topologyKey: kubernetes.io/hostname